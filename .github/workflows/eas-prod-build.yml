name: Build Production

on:
  workflow_dispatch:
  
jobs:
  build-android-production:
    name: Build Android Production
    runs-on: ubuntu-latest
    
    steps:
      - name: 🏗 Checkout code
        uses: actions/checkout@v4
      
      - name: 🏗 Setup Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          
      - name: ☕ Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          
      - name: 📱 Setup Android SDK
        uses: android-actions/setup-android@v3
        
      - name: 📦 Install dependencies
        run: npm ci
        
      - name: 🚀 Setup EAS CLI
        run: npm install -g eas-cli
        
      - name: 🔐 Create .env.production file
        run: |
          cat > .env << EOF
          EXPO_PUBLIC_CLERK_PUBLISHABLE_KEY=${{ secrets.EXPO_PUBLIC_CLERK_PUBLISHABLE_KEY }}
          EXPO_PUBLIC_OUTDRINKME_API_URL=${{ secrets.EXPO_PUBLIC_OUTDRINKME_API_URL }}
          EXPO_PUBLIC_ENV=production
          EOF
          
          # Debug output (without exposing secrets)
          echo "✅ Production environment configured:"
          echo "   EXPO_PUBLIC_ENV=production"
          echo "   EXPO_PUBLIC_CLERK_PUBLISHABLE_KEY=pk_***"
          echo "   EXPO_PUBLIC_OUTDRINKME_API_URL=${{ secrets.EXPO_PUBLIC_OUTDRINKME_API_URL }}"
      
      - name: 🔑 Setup Android Keystore
        run: |
          mkdir -p credentials/android
          echo "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" | base64 -d > credentials/android/keystore.jks
          echo "✅ Keystore created at credentials/android/keystore.jks"
          
      - name: 📝 Create credentials.json
        run: |
          cat > credentials.json << 'EOF'
          {
            "android": {
              "keystore": {
                "keystorePath": "credentials/android/keystore.jks",
                "keystorePassword": "${{ secrets.ANDROID_KEYSTORE_PASSWORD }}",
                "keyAlias": "${{ secrets.ANDROID_KEY_ALIAS }}",
                "keyPassword": "${{ secrets.ANDROID_KEY_PASSWORD }}"
              }
            }
          }
          EOF
          echo "✅ Credentials file created"
          
      - name: 🔐 Authenticate with EAS
        run: |
          eas whoami
          echo "✅ Authenticated with EAS"
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
        
      - name: 🏗 Build Android Production AAB
        run: eas build --platform android --profile production --local --non-interactive
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
          # Pass environment variables directly to build process
          EXPO_PUBLIC_CLERK_PUBLISHABLE_KEY: ${{ secrets.EXPO_PUBLIC_CLERK_PUBLISHABLE_KEY }}
          EXPO_PUBLIC_OUTDRINKME_API_URL: ${{ secrets.EXPO_PUBLIC_OUTDRINKME_API_URL }}
          EXPO_PUBLIC_ENV: production
        
      - name: 📤 Upload AAB artifact
        uses: actions/upload-artifact@v4
        if: success()
        with:
          name: android-production-${{ github.sha }}
          path: '**/*.aab'
          retention-days: 90
      
      - name: 🏷️ Create GitHub Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: '**/*.aab'
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: 🧹 Cleanup credentials
        if: always()
        run: |
          rm -f credentials/android/keystore.jks
          rm -f credentials.json
          rm -f .env
          echo "✅ Sensitive files cleaned up"
      
      - name: 📊 Build Summary
        if: success()
        run: |
          echo "### 🎉 Production Build Successful!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Platform:** Android" >> $GITHUB_STEP_SUMMARY
          echo "**Build Type:** AAB (Production)" >> $GITHUB_STEP_SUMMARY
          echo "**Commit:** \`${{ github.sha }}\`" >> $GITHUB_STEP_SUMMARY
          echo "**Branch:** \`${{ github.ref_name }}\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Download the AAB from the artifacts above ⬆️" >> $GITHUB_STEP_SUMMARY
      
      - name: 💬 Notify on failure
        if: failure()
        run: |
          echo "### ❌ Production Build Failed!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Check the logs above for details." >> $GITHUB_STEP_SUMMARY